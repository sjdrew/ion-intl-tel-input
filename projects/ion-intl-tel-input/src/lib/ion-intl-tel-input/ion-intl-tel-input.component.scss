:host {
    width: 100%;
}

.ion-intl-tel-input-wrapper {
    font-size: inherit; // override this to adjust font size of label, country picker, and input
    
    &.isDisabled {
        ion-label, ion-button {
            opacity: 0.3;
        }
    }

    .ion-intl-tel-controls-wrapper {
        display: flex;
        align-items: center;
        font-size: inherit;

        ion-button::part(native) {
            padding-inline-start: 0px;
            padding-inline-end: 2px;
            margin: 0px;
            font-weight: normal;
        }

        .fi {
            margin-right: 5px;
        }
    
        .ion-intl-tel-input-btn {
            flex: 0 0 auto;
            color: var(--ion-color);
            margin-right: 10px;
            font-size: inherit;
        }
    
        .ion-intl-tel-input-number {
            flex: 0 0 auto;
            ion-input {
                min-height: 1em;
            }
        }

        ion-intl-tel-input-flag {
            font-size: inherit;
        }
    }

    &.field-outline {
        border-radius: var(--border-radius, 4px);
        border-color: var(--ion-color-step-300, #b3b3b3);
        border-width: 1px;
        border-style: solid;
        padding-inline-start: var(--ion-padding, 16px);
        padding-inline-end: var(--ion-padding, 16px);
        padding-top: var(--ion-padding, 8px); // to accommodate button padding
        padding-bottom: var(--ion-padding, 8px); // to accommodate button padding
    }

    &.field-fill {
        padding-inline-start: var(--ion-padding, 16px);
        padding-inline-end: var(--ion-padding, 16px);
        padding-top: var(--ion-padding, 8px); // to accommodate button padding
        padding-bottom: var(--ion-padding, 8px); // to accommodate button padding

        background-color: var(--ion-background-color-step-50);
        border-color: var(--ion-background-color-step-500);
        border-radius: var(--border-radius, 4px);
      
        min-height: 56px;
    }

    .label-stacked {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .label-start {
        max-width: 200px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        margin-right: var(--ion-margin, 16px);
    }

    .label-end-wrapper {
        flex: 1;
        display: flex;
        justify-content: end;
        .label-end {
            text-align: right;
            max-width: 200px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            margin-left: var(--ion-margin, 16px);
        }
    }
}

::ng-deep ion-intl-tel-input:has(.label-end-wrapper) {
    width: 100%;
    .ion-intl-tel-controls-wrapper {
        width: 100%;
    }
}

::ng-deep ion-intl-tel-input:has(div.field-outline > ion-label)   {
    .ion-intl-tel-input-wrapper  {
        position: relative;

        & > ion-label {
            position: absolute;
            top: 0;
            left: 12px;
            transform: translateY(-0.7em) scale(0.82);
            background-color: var(--ion-background-color, #fff);
            padding: 0 4px;
        }
    }
}

::ng-deep ion-intl-tel-input:has(div.field-fill > ion-label.label-stacked)   {
    .ion-intl-tel-input-wrapper  {
        position: relative;
        padding-top: var(--ion-padding, 16px);

        .label-stacked {
            position: absolute;
            transform: translateY(-0.7em) scale(0.82);
        }
    }
}

::ng-deep ion-item > ion-intl-tel-input:has(.ion-intl-tel-input-wrapper.field-fill)   {
    .ion-intl-tel-input-wrapper.field-fill  {
        border: none;
        border-radius: none;
        border-top-left-radius: var(--border-radius, 4px);
        border-top-right-radius: var(--border-radius, 4px);
        border-bottom: 1px solid var(--ion-background-color-step-500);
        // padding-bottom: 0;
        // min-height: unset;
    }
}

::ng-deep :not(ion-item) > ion-intl-tel-input:has(.ion-intl-tel-input-wrapper.field-fill > .label-stacked)   {
    .ion-intl-tel-input-wrapper.field-fill  {
        border: none;
        border-radius: none;
        border-top-left-radius: var(--border-radius, 4px);
        border-top-right-radius: var(--border-radius, 4px);
        border-bottom: 1px solid var(--ion-background-color-step-500);
        padding-bottom: 0;
        min-height: unset;

        // &.isDisabled {
        //     ion-label, ion-button {
        //         opacity: unset;
        //     }
        // }
    }
}

